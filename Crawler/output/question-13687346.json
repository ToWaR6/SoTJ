{"question": {"questionId": 13687346, "tags": ["java", "nullpointerexception", "hashmap"], "relatedQuestions": ["https://stackoverflow.com/questions/1383797/java-hashmap-how-to-get-key-from-value", "https://stackoverflow.com/questions/4157972/how-to-update-a-value-given-a-key-in-a-java-hashmap", "https://stackoverflow.com/questions/7780908/null-pointer-exception-when-testing-in-java", "https://stackoverflow.com/questions/12873923/null-pointer-exception-fix-lists", "https://stackoverflow.com/questions/18491269/string-null-pointer-exception", "https://stackoverflow.com/questions/27084960/arraylistdisplaymode-null-pointer-exception-in-java", "https://stackoverflow.com/questions/28431249/null-pointer-exception-in-java-arraylist", "https://stackoverflow.com/questions/28943293/getting-null-pointer-exception-with-java", "https://stackoverflow.com/questions/30727515/why-is-executing-java-code-in-comments-with-certain-unicode-characters-allowed", "https://stackoverflow.com/questions/40024165/null-pointer-exception-in-java-error"], "userId": 277465, "answers": [{"userId": 1679537, "comments": [{"content": "This is the correct answer. Also, HashMap myMap<Character, Boolean> is a syntax error (should be HashMap<Character, Boolean> myMap), and you can't name methods do.", "commentId": 18791676, "date": "2012-12-03 16:24:28Z", "userId": 1768232, "upvoteCount": 3}], "content": "\r\nIf c is not contained in myMap, it will return null, which can't be unboxed as a boolean.\n\nTry :\n\nBoolean b = myMap.get(c);\nif(b != null && b){\n...\n\n    ", "answerId": 13687403, "date": "2012-12-03 16:19:53Z", "upvoteCount": 37}, {"userId": 1870943, "comments": [], "content": "\r\nIf myMap doesn't contain a key that matches c, then myMap.get(c) will return null. In that case, when the JVM unboxes what it expects to be a java.lang.Boolean object into a boolean primitive to execute the condition, it founds a null object and therefore throws a java.lang.NullPointerException.\n\nThe following block is equivalent to what you have in your example and should make it easier to understand why you would have a NullPointerException:\n\nif (((Boolean) myMap.get(c)).booleanValue()) \n\n\nI would re-write your original condition as:\n\nif ( myMap.containsKey(c) )\n\n\nI hope this helps.\n    ", "answerId": 13687527, "date": "2012-12-03 16:28:10Z", "upvoteCount": 11}, {"userId": 1859787, "comments": [], "content": "\r\nChange\n\nif ( myMap.get(c) )\n\n\nto\n\nif ( myMap.containsKey(c) && myMap.get(c))\n\n    ", "answerId": 13687577, "date": "2012-12-03 16:30:55Z", "upvoteCount": 5}, {"userId": 1506264, "comments": [], "content": "\r\nIf there is no entity with required Character in map, then map.get(key) returns null and inside if statement it leads to NullPointerException throwing. \n    ", "answerId": 13687392, "date": "2012-12-03 16:19:35Z", "upvoteCount": 3}, {"userId": 21849, "comments": [], "content": "\r\nA stab in the dark: is there an entry in your map for the particular character assigned to c? If there isn't, Java may be trying to unbox a null value...\n    ", "answerId": 13687445, "date": "2012-12-03 16:22:52Z", "upvoteCount": 3}, {"userId": 1214089, "comments": [{"content": "Good answer, +1. Do you happen to know if containsKey(c) is faster than get(c) != null?", "commentId": 18792185, "date": "2012-12-03 16:40:53Z", "userId": 1768232, "upvoteCount": 0}, {"content": "@durron597 Based on the implementation of both containsKey and get, actually there is a difference in performance if the key is null. containsKey calls the method getEntry who iterates over the entry set, as get does too (they're actually the same method, except get does a null check with the key and returns null if the key is null, while getEntry assigns a hash value of 0 if the submitted key is null, this particular case makes the difference).", "commentId": 18793181, "date": "2012-12-03 17:13:40Z", "userId": 1214089, "upvoteCount": 0}], "content": "\r\nChanging this\n\nfor ( char c : input.toCharArray() )\n{\n  if ( myMap.get(c) )\n     output.append(c);\n}\n\n\nFor this\n\nfor ( char c : input.toCharArray() )\n{\n  if ( myMap.containsKey(c) )\n     output.append(c);\n}\n\n\nWill make use of the map's defined method to check if a certain key is registered on the map. I'm leaving the for as it is, since you seem to want to check for a group of keys.\n\nmyMap.get(c) returns the value associated with that key, or null if the key is not registered.\n\nAs a side note, remember that if you use this method with custom objects you'll have to redefine the hashcode and equals methods.\n\nSuggestion: I'm just suggesting this out of a remote idea I have, if it's not a correct interpretation of your code just ignore it. If your map only contains a boolean value to determine if certain value \"is contained\" or not, I strongly suggest you use a HashSet instead because a map is not doing any sense in that context.\n    ", "answerId": 13687567, "date": "2012-12-03 16:30:19Z", "upvoteCount": 3}, {"userId": 275973, "comments": [], "content": "\r\nYour code is very messy.\n\n\ndo is a reserved keyword, do not use it as a method name.\na 'if' expression must return a boolean, not null.\nmyMap's initialization is not correctly written\n\n\nHere is a working version :\n\nimport java.util.HashMap;\n\npublic class A {\n    private HashMap<Character, Boolean> myMap;\n\n    public A() {\n        this.myMap = new HashMap<Character, Boolean>();\n        String mychars = \"asdfzxcvqwer\";\n        for ( char c : mychars.toCharArray() )\n            myMap.put(c, true);\n    }\n\n    public String execute(String input) {\n        StringBuilder output = new StringBuilder();\n        for ( char c : input.toCharArray() )\n        {\n            if ( this.myMap.get(c) != null )\n                output.append(c);\n        }\n        return output.toString();\n    }\n\n\n    public static void main(String[] args) {\n        A test = new A();\n        test.execute(\"abc\");\n    }\n}\n\n    ", "answerId": 13687483, "date": "2012-12-03 16:25:56Z", "upvoteCount": 2}], "date": "2012-12-03 16:17:17Z", "selectedAnswer": 13687403, "title": "Java HashMap get method null pointer exception", "comments": [{"content": "@talnicolas check his map declaration and also do is a reserved keyword in java, you cant use it as a method name", "commentId": 18791611, "date": "2012-12-03 16:22:20Z", "userId": 1034737, "upvoteCount": 1}, {"content": "I typed out the code manually into SO -- apologies for both the errors. Thanks very much for the answers, everyone. I'll make the edits.", "commentId": 18791963, "date": "2012-12-03 16:33:36Z", "userId": 277465, "upvoteCount": 0}], "content": "\r\n\r\nI have code similar to the following :-\n\nclass A\n{\n  private HashMap<Character, Boolean> myMap;\n  public A()\n  {\n    myMap = new HashMap<Character, Boolean>();\n    String mychars = \"asdfzxcvqwer\";\n    for ( char c : mychars.toCharArray() )\n        myMap.put(c, true);\n  }\n  public doo(String input)\n  {\n    StringBuilder output = new StringBuilder();\n    for ( char c : input.toCharArray() )\n    {\n      if ( myMap.get(c) )\n         output.append(c);\n    }\n  }\n  ...\n  ...\n}\n\n\nI get a null pointer exception at the line if ( myMap.get(c) ) -- What am I doing wrong?\n    ", "favoriteCount": 1, "upvoteCount": 8}, "users": [{"userId": 277465, "reputation": 0, "pseudo": "user277465"}, {"userId": 1679537, "reputation": 13452, "pseudo": "xlecoustillier"}, {"userId": 1870943, "reputation": 249, "pseudo": "Nuno Guerreiro"}, {"userId": 1859787, "reputation": 263, "pseudo": "Jiji"}, {"userId": 1506264, "reputation": 2957, "pseudo": "bellum"}, {"userId": 21849, "reputation": 19772, "pseudo": "Dan Vinton"}, {"userId": 1214089, "reputation": 8734, "pseudo": "Gamb"}, {"userId": 275973, "reputation": 2809, "pseudo": "Jean-Philippe Briend"}]}